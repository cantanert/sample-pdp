{"version":3,"sources":["components/pdp/ProductMainImage.js","statics/product-detail-static-data.js","redux/actions/pdp/productActions.js","components/pdp/ProductThumbnailImages.js","components/pdp/ProductImages.js","components/pdp/ProductContentHeader.js","components/pdp/ProductMinMaxInformations.js","components/pdp/SelectableAttribute.js","components/pdp/ProductSelectableAttributes.js","components/pdp/ProductBaremsAndQuantities.js","components/pdp/ProductActionButtons.js","components/pdp/ProductPriceAndShipmentInfo.js","components/pdp/ProductContent.js","statics/mocked-product-response.js","pages/pdp/ProductDetails.js","App.js","serviceWorker.js","redux/reducers/pdp/productReducer.js","redux/reducers/reducerCombining.js","redux/store.js","index.js"],"names":["connect","states","productDetailStates","productDetailReducer","props","className","src","activeImage","width","reduxActions","SET_PRODUCT_TITLE","SET_SELECTABLE_ATTRIBUTES","SET_PRODUCT_VARIANTS","SET_BAREM_LIST","SET_INITIAL_VARIANT","SET_ACTIVE_VARIANT","SET_ACTIVE_IMAGE","SET_SELECTED_COUNT","SET_SELECTED_COLOR","SET_SELECTED_SIZE","SET_PIECE_PRICE","SET_QUANTITY_BAREM_MIN","SET_QUANTITY_BAREM_MAX","SET_PRICE_BAREM_MIN","SET_PRICE_BAREM_MAX","SET_AVAILABLE_SIZES","SET_ACTIVE_COLOR_INDEX","SET_ACTIVE_SIZE_INDEX","classNames","SELECTED","attributes","COLOR","SIZE","setActiveImageActionCreator","imageURL","type","productStaticData","payload","setAvailableSizesActionCreator","sizes","state","productDetailState","dispatch","setActiveImage","activeVariant","images","map","url","index","key","onClick","thumbnailClickHandler","ProductImages","productTitle","priceBaremMin","priceBaremMax","quantityBaremMin","setSelectedSize","variant","size","setSelectedColor","color","setAvailableSizes","setActiveColorIndex","setActiveSizeIndex","setActiveVariant","productVariants","availableSizes","activeColorIndex","activeSizeIndex","selectedColor","useEffect","activeAttributeChecker","attribute","options","children","values","forEach","item","elem","name","pdpStaticData","value","setSelectedColorState","attr","colorOptionClickHandler","event","target","classList","contains","textContent","selectedColorsVariants","push","element","getAvaliableSizes","updateActiveVariant","colorAttributes","option","e","sizeOptionClickHandler","disabled","includes","selectableAttributes","setSelectedCount","setSelectedCountActionCreator","setPiecePrice","price","setPiecePriceActionCreator","baremList","selectedCount","quantityBaremMax","useState","baremIndex","setBaremIndex","count","parseInt","minimumQuantity","maximumQuantity","baremActivater","baremListLength","length","onChange","inputChangeHandler","isAddToCartEnabled","setIsAddToCartEnabled","selectedSize","piecePrice","console","log","id","toFixed","ProductContent","ProductDetails","getMockedResponseAndInitializeState","mockedProductResponse","this","React","Component","App","Boolean","window","location","hostname","match","initialState","mockedData","initialVariant","action","productDetailsStaticData","combineReducers","store","createStore","reducerCombining","composeWithDevTools","applyMiddleware","logger","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b390290e.chunk.js","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\n\nconst ProductMainImage = (props) => {\n    return (\n        <div className=\"product-main-image\">\n            <img src={props.productDetailStates.activeImage} width=\"100%\"/>\n        </div>\n    )\n};\n\nconst mapStateToProps = (states) => {\n  return {\n      productDetailStates : states.productDetailReducer\n  }\n};\n\nexport default connect(mapStateToProps)(ProductMainImage);","export default {\n    reduxActions: {\n        SET_PRODUCT_TITLE : \"PDP_SET_PRODUCT_TITLE\",\n        SET_SELECTABLE_ATTRIBUTES: \"PDP_SET_SELECTABLE_ATTRIBUTES\",\n        SET_PRODUCT_VARIANTS: \"PDP_SET_PRODUCT_VARIANTS\",\n        SET_BAREM_LIST: \"PDP_SET_BAREM_LIST\",\n        SET_INITIAL_VARIANT:\"PDP_SET_INITIAL_VARIANT\",\n        SET_ACTIVE_VARIANT: \"PDP_SET_ACTIVE_VARIANT\",\n        SET_ACTIVE_IMAGE: \"PDP_SET_ACTIVE_IMAGE\",\n        SET_SELECTED_COUNT: \"PDP_SET_SELECTED_COUNT\",\n        SET_SELECTED_COLOR: \"PDP_SET_SELECTED_COLOR\",\n        SET_SELECTED_SIZE: \"PDP_SET_SELECTED_SIZE\",\n        SET_PIECE_PRICE: \"PDP_SET_PIECE_PRICE\",\n        SET_QUANTITY_BAREM_MIN: \"PDP_SET_QUANTITY_BAREM_MIN\",\n        SET_QUANTITY_BAREM_MAX: \"PDP_SET_QUANTITY_BAREM_MAX\",\n        SET_PRICE_BAREM_MIN: \"PDP_SET_PRICE_BAREM_MIN\",\n        SET_PRICE_BAREM_MAX: \"PDP_SET_PRICE_BAREM_MAX\",\n        SET_AVAILABLE_SIZES: \"PDP_SET_AVAILABLE_SIZES\",\n        SET_ACTIVE_COLOR_INDEX: \"PDP_SET_ACTIVE_COLOR_INDEX\",\n        SET_ACTIVE_SIZE_INDEX: \"PDP_SET_ACTIVE_SIZE_INDEX\"\n    },\n    classNames: {\n      SELECTED: \"selected\"\n    },\n    attributes:{\n        COLOR : \"Renk\",\n        SIZE : \"Beden\"\n    }\n}","import productStaticData from \"../../../statics/product-detail-static-data\";\n\n\nexport const setTitleActionCreator = (title) => {\n    return {\n        type: productStaticData.reduxActions.SET_PRODUCT_TITLE,\n        payload: title\n    }\n};\n\nexport const setSelectableAttributesActionCreator = (attributes) => {\n    return {\n        type: productStaticData.reduxActions.SET_SELECTABLE_ATTRIBUTES,\n        payload: attributes\n    }\n};\n\nexport const setProductVariantsActionCreator = (variants) => {\n    return {\n        type: productStaticData.reduxActions.SET_PRODUCT_VARIANTS,\n        payload: variants\n    }\n};\n\nexport const setBaremListActionCreator = (barems) => {\n    return {\n        type: productStaticData.reduxActions.SET_BAREM_LIST,\n        payload: barems\n    }\n};\n\nexport const setInitialVariantActionCreator = (variant) => {\n    return {\n        type: productStaticData.reduxActions.SET_INITIAL_VARIANT,\n        payload: variant\n    }\n};\n\nexport const setActiveVariantActionCreator = (imageURL) => {\n    return {\n        type: productStaticData.reduxActions.SET_ACTIVE_VARIANT,\n        payload: imageURL\n    }\n};\n\nexport const setActiveImageActionCreator = (imageURL) => {\n    return {\n        type: productStaticData.reduxActions.SET_ACTIVE_IMAGE,\n        payload: imageURL\n    }\n};\n\nexport const setSelectedCountActionCreator = (imageURL) => {\n    return {\n        type: productStaticData.reduxActions.SET_SELECTED_COUNT,\n        payload: imageURL\n    }\n};\n\nexport const setSelectedColorActionCreator = (color) => {\n    return {\n        type: productStaticData.reduxActions.SET_SELECTED_COLOR,\n        payload: color\n    }\n};\n\nexport const setSelectedSizeActionCreator = (size) => {\n    return {\n        type: productStaticData.reduxActions.SET_SELECTED_SIZE,\n        payload: size\n    }\n};\n\nexport const setPiecePriceActionCreator = (price) => {\n    return {\n        type: productStaticData.reduxActions.SET_PIECE_PRICE,\n        payload: price\n    }\n};\n\nexport const setQuantityBaremMinActionCreator = (price) => {\n    return {\n        type: productStaticData.reduxActions.SET_QUANTITY_BAREM_MIN,\n        payload: price\n    }\n};\n\nexport const setQuantityBaremMaxActionCreator = (price) => {\n    return {\n        type: productStaticData.reduxActions.SET_QUANTITY_BAREM_MAX,\n        payload: price\n    }\n};\n\nexport const setAvailableSizesActionCreator = (sizes) => {\n    return {\n        type: productStaticData.reduxActions.SET_AVAILABLE_SIZES,\n        payload: sizes\n    }\n};\n\nexport const setActiveSizeIndexActionCreator = (size) => {\n    return {\n        type: productStaticData.reduxActions.SET_ACTIVE_SIZE_INDEX,\n        payload: size\n    }\n};\n\nexport const setActiveColorIndexActionCreator = (color) => {\n    return {\n        type: productStaticData.reduxActions.SET_ACTIVE_COLOR_INDEX,\n        payload: color\n    }\n};\n\nexport const setPriceBaremMin = (price) => {\n    return {\n        type: productStaticData.reduxActions.SET_PRICE_BAREM_MIN,\n        payload: price\n    }\n};\n\nexport const setPriceBaremMax = (price) => {\n    return {\n        type: productStaticData.reduxActions.SET_PRICE_BAREM_MAX,\n        payload: price\n    }\n};\n\nexport const setMinSaleQuantity = (quantity) => {\n    return {\n        type: productStaticData.reduxActions.SET_MIN_SALE_QUANTITY,\n        payload: quantity\n    }\n};\n","import React from \"react\";\nimport {connect} from \"react-redux\"\nimport {setActiveImageActionCreator, setTitleActionCreator} from \"../../redux/actions/pdp/productActions\"\n\nconst ProductThumbnailImages = (props) => {\n\n    let {activeVariant} = props.productDetailState;\n\n    const thumbnailClickHandler = url => {\n        props.setActiveImage(url);\n    };\n\n    const thumbnailImageRenderer = () => {\n        return activeVariant.images.map((url,index)=>{\n            return (\n                <div className=\"thumbnail\" key={index}>\n                    <img src={url} width=\"100%\" onClick={() => thumbnailClickHandler(url)}/>\n                </div>\n            )\n        });\n    };\n\n    return (\n        <div className=\"product-thumbnail-images\">\n            {thumbnailImageRenderer()}\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        productDetailState : state.productDetailReducer\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setActiveImage: (imageURL) => {\n            dispatch(setActiveImageActionCreator(imageURL))\n        },\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductThumbnailImages);","import React from \"react\";\nimport ProductMainImage from \"./ProductMainImage\";\nimport ProductThumbnailImages from \"./ProductThumbnailImages\";\n\nconst ProductImages = () => {\n    return(\n        <div className=\"product-images-wrapper\">\n            <ProductMainImage/>\n            <ProductThumbnailImages/>\n        </div>\n    )\n};\n\nexport default ProductImages;","import React from \"react\";\nimport { FaStar } from 'react-icons/fa';\nimport {connect} from 'react-redux';\n\nconst ProductContentHeader = (props) => {\n    return (\n        <div className=\"product-content-header\">\n            <p className=\"product-title\">{props.productDetailState.productTitle}</p>\n            <div className=\"product-interactions\">\n                <span className=\"product-comment-count\">\n                    <span className=\"product-overall\">\n                        <FaStar/><FaStar/><FaStar/><FaStar/><FaStar/>\n                    </span>\n                    23 Yorum\n                </span>\n            </div>\n\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        productDetailState : state.productDetailReducer\n    }\n};\n\nexport default connect(mapStateToProps)(ProductContentHeader);","import React from \"react\";\nimport {connect} from \"react-redux\";\n\nconst ProductMinMaxInformations = (props) => {\n\n    let {priceBaremMin, priceBaremMax, quantityBaremMin} = props.productDetailState;\n\n    return (\n        <div className=\"product-min-max-infos\">\n            <p className=\"price-per-piece\"><span>{priceBaremMax + \" TL - \" + priceBaremMin +\" TL\"}</span> / Adet</p>\n            <p className=\"min-quantity\">{quantityBaremMin} Adet (Minimum Sipariş Adedi)</p>\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) =>{\n    return {\n        productDetailState : state.productDetailReducer\n    }\n};\n\nexport default connect(mapStateToProps)(ProductMinMaxInformations);","import React, {useState, useEffect} from \"react\";\nimport {connect} from \"react-redux\";\nimport pdpStaticData from \"../../statics/product-detail-static-data\";\nimport {\n    setSelectedSizeActionCreator,\n    setSelectedColorActionCreator,\n    setAvailableSizesActionCreator,\n    setActiveSizeIndexActionCreator,\n    setActiveColorIndexActionCreator,\n    setActiveVariantActionCreator,\n    setActiveImageActionCreator\n} from \"../../redux/actions/pdp/productActions\";\n\n\nconst SelectableAttribute = (props) => {\n\n    let { activeVariant,\n        productVariants,\n        availableSizes,\n        activeColorIndex,\n        activeSizeIndex,\n        selectedColor } = props.productDetailState;\n\n    useEffect(()=>{\n        activeAttributeChecker();\n    },[]);\n\n    const activeAttributeChecker = () => {\n        if(activeVariant){\n            props.children.values.forEach((item,index)=>{\n                for(let elem of activeVariant.attributes){\n                    if(elem.name === pdpStaticData.attributes.COLOR && elem.value === item){\n                        props.setActiveColorIndex(index);\n                        setSelectedColorState(elem.name,item)\n                    }\n                }\n            });\n        }\n    };\n\n    const setSelectedColorState = (attr,value) => {\n        if(pdpStaticData.attributes.COLOR === attr){\n            props.setSelectedColor(value);\n        }\n    };\n\n    const getAvaliableSizes = (color) => {\n        let selectedColorsVariants = [];\n        productVariants.forEach((variant) => {\n            for (let attribute of variant.attributes){\n                if (attribute.name === pdpStaticData.attributes.COLOR && attribute.value === color){\n                    selectedColorsVariants.push(variant);\n                }\n            }\n        });\n\n        let availableSizes = [];\n        for (let element of selectedColorsVariants){\n            for (let attr of  element.attributes){\n                if(attr.name === pdpStaticData.attributes.SIZE){\n                    availableSizes.push(attr.value);\n                }\n            }\n        }\n\n        props.setAvailableSizes(availableSizes);\n    };\n\n\n    const colorOptionClickHandler = (event,index) => {\n        if( !event.target.classList.contains(pdpStaticData.classNames.SELECTED) ){\n            props.setSelectedColor(event.target.textContent);\n            props.setSelectedSize(null);\n            getAvaliableSizes(event.target.textContent);\n        }\n        props.setActiveColorIndex(index);\n        props.setActiveSizeIndex(null)\n    };\n\n    const sizeOptionClickHandler = (event,index) => {\n        if(!event.target.classList.contains(pdpStaticData.classNames.SELECTED)){\n            props.setSelectedSize(event.target.textContent);\n        }\n        props.setActiveSizeIndex(index);\n        updateActiveVariant(event.target.textContent);\n    };\n\n    const updateActiveVariant = (size) => {\n        let colorAttributes = [];\n        productVariants.forEach((variant) => {\n            for (let attribute of variant.attributes) {\n                if (attribute.name === pdpStaticData.attributes.COLOR && attribute.value === selectedColor) {\n                    colorAttributes.push(variant);\n                }\n            }\n        });\n\n        for (let variant of colorAttributes){\n            for(let attr of variant.attributes){\n                if(attr.name === pdpStaticData.attributes.SIZE && attr.value === size){\n                    props.setActiveVariant(variant);\n                    props.setActiveImage(variant.images[0]);\n                }\n            }\n        }\n    };\n\n    const selectableAttributeOptionRenderer = (attribute,options) => {\n        if(attribute === pdpStaticData.attributes.COLOR){\n            return  options.map((option,index)=>{\n                return (\n                    <button\n                        className={\"option \" + (index === activeColorIndex ? \"selected\" : \"\")}\n                        onClick={(e) => colorOptionClickHandler(e,index)}\n                        key={index}\n                    >\n                        {option}\n                    </button>\n                );\n            });\n        } else {\n\n            return  options.map((option,index)=>{\n                return (\n                    <button\n                        className={\"option \" + (index === activeSizeIndex ? \"selected\" : \"\")}\n                        onClick={(e) => sizeOptionClickHandler(e,index)}\n                        key={index}\n                        disabled={(!availableSizes.includes(option))}\n                    >\n                        {option}\n                    </button>\n                );\n            });\n        }\n    };\n\n    return (\n        <div className=\"selectable-attribute\">\n            <div className=\"attribute-name\">\n                <span>{ props.children.name }</span>\n            </div>\n            <div className=\"attribute-options\">\n                {selectableAttributeOptionRenderer(props.children.name, props.children.values)}\n            </div>\n        </div>\n    )\n};\n\nconst mapStateToProps = state => {\n    return {\n        productDetailState : state.productDetailReducer\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setSelectedSize: (variant) => {\n            dispatch(setSelectedSizeActionCreator(variant));\n        },\n        setSelectedColor: (variant) => {\n            dispatch(setSelectedColorActionCreator(variant));\n        },\n        setAvailableSizes: (sizes) => {\n            dispatch(setAvailableSizesActionCreator(sizes));\n        },\n        setActiveColorIndex: (index) => {\n            dispatch(setActiveColorIndexActionCreator(index))\n        },\n        setActiveSizeIndex: (index) => {\n            dispatch(setActiveSizeIndexActionCreator(index))\n        },\n        setActiveVariant: (variant) => {\n            dispatch(setActiveVariantActionCreator(variant));\n        },\n        setActiveImage: (imageURL) => {\n            dispatch(setActiveImageActionCreator(imageURL))\n        },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectableAttribute);","import React from \"react\";\nimport {connect} from 'react-redux';\nimport SelectableAttribute from \"./SelectableAttribute\";\n\nconst ProductSelectableAttributes = (props) => {\n\n    let {selectableAttributes} = props.productDetailState;\n\n    const selectableAttributeRenderer = (attributes) => {\n        return attributes.map((attr,index) => {\n            return (\n                <SelectableAttribute key={index}>{attr}</SelectableAttribute>\n            )\n        });\n    };\n\n    return (\n        <div className=\"product-selectable-attributes\">\n            {selectableAttributeRenderer(selectableAttributes)}\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        productDetailState : state.productDetailReducer\n    }\n};\n\nexport default connect(mapStateToProps)(ProductSelectableAttributes);","import React, {useState, useEffect} from \"react\";\nimport {connect} from 'react-redux';\nimport {\n    setSelectedCountActionCreator,\n    setPiecePriceActionCreator\n} from \"../../redux/actions/pdp/productActions\"\n\nconst ProductBaremsAndQuantities = (props) => {\n    const { baremList, selectedCount, quantityBaremMin, quantityBaremMax} = props.productDetailState;\n\n    let [baremIndex,setBaremIndex] = useState(null);\n\n    const baremActivater = () => {\n      if(selectedCount){\n          let count = parseInt(selectedCount);\n          baremList.forEach((item,index)=>{\n              if(count >= item.minimumQuantity && selectedCount <= item.maximumQuantity){\n                  setBaremIndex(index);\n                  props.setPiecePrice(item.price);\n              } else if(count < quantityBaremMin || count> quantityBaremMax){\n                  setBaremIndex(null);\n                  props.setPiecePrice(null);\n              }\n          });\n      } else {\n          setBaremIndex(null);\n      }\n    };\n\n    useEffect(()=>{\n        baremActivater();\n    },[selectedCount]);\n\n    const inputChangeHandler = (e) => {\n        let count;\n        (e.target.value) ? count = e.target.value : count = null;\n        props.setSelectedCount(count);\n    };\n\n    const baremListLength = baremList.length;\n    const baremPriceRenderer = (list) => {\n        return list.map((item, index)=> {\n            if(baremListLength === index + 1){\n                return (\n                    <div className={\"barem-price \" + (baremIndex === index ? \"selected\" : \" \") } key={index}>\n                        <p>{item.minimumQuantity}+</p>\n                        <p>{item.price} TL</p>\n                    </div>\n                )\n            } else {\n                return (\n                    <div className={\"barem-price \" + (baremIndex === index ? \"selected\" : \" \")} key={index}>\n                        <p>{item.minimumQuantity} - {item.maximumQuantity}</p>\n                        <p>{item.price} TL</p>\n                    </div>\n                )\n            }\n        });\n    };\n\n\n    return (\n        <div className=\"product-barems-and-quantity\">\n            <div className=\"product-barems\">\n                <div className=\"barem-prices-title\">\n                    <p>Toptan Fiyat</p>\n                    <p>(Adet)</p>\n                </div>\n                <div className=\"barem-prices-wrapper\">\n                    {baremPriceRenderer(baremList)}\n                </div>\n            </div>\n            <div className=\"product-quantity\">\n                <div className=\"product-quantity-title\">\n                    <p>Adet</p>\n                </div>\n                <div className=\"product-quantity-input\">\n                    <input type=\"number\" onChange={(e) => inputChangeHandler(e)}/>\n                    <span>Adet</span>\n                    <span className=\"stock-quantity\">Stok Adedi : <strong>600</strong></span>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        productDetailState : state.productDetailReducer\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setSelectedCount: (imageURL) => {\n            dispatch(setSelectedCountActionCreator(imageURL))\n        },\n        setPiecePrice: (price) => {\n            dispatch(setPiecePriceActionCreator(price));\n        }\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductBaremsAndQuantities);","import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\n\nconst ProductActionButtons = (props) => {\n\n    let [isAddToCartEnabled, setIsAddToCartEnabled] = useState(false);\n\n    const {selectedCount, activeVariant, quantityBaremMax, quantityBaremMin, selectedSize, piecePrice} = props.productDetailState;\n    useEffect(()=> {\n        (selectedCount < quantityBaremMin || selectedCount > quantityBaremMax || !activeVariant || !selectedSize )\n            ? setIsAddToCartEnabled(false)\n            : setIsAddToCartEnabled(true);\n    },[selectedCount,activeVariant,selectedSize]);\n\n    const addToCartClickHandler = () => {\n        console.log(\"Selected Barem Price : \" + piecePrice);\n        console.log(\"Selected Variant ID : \" + activeVariant.id);\n        console.log(\"Selected Variant Data : \");\n        console.log(activeVariant);\n    };\n\n    return (\n        <div className=\"product-action-buttons\">\n            <div className=\"submit-button\">\n                <button\n                    disabled={ !isAddToCartEnabled }\n                    onClick={() => addToCartClickHandler()}>\n                    Sepete Ekle\n                </button>\n            </div>\n            <div className=\"payment-options\">\n                <span>Ödeme Seçenekleri</span>\n            </div>\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => {\n  return {\n      productDetailState : state.productDetailReducer\n  }\n};\n\n\n\nexport default connect(mapStateToProps)(ProductActionButtons);","import React from \"react\";\nimport {FiTruck} from \"react-icons/fi\"\nimport ProductActionButtons from \"./ProductActionButtons\";\nimport {connect} from \"react-redux\";\n\nconst ProductPriceAndShipmentInfo = (props) => {\n\n    let {selectedCount, piecePrice } = props.productDetailState;\n\n  return (\n      <div className=\"product-price-and-shipment-info\">\n          <div className=\"product-total-price-title\">\n              <p>Toplam</p>\n          </div>\n          <div className=\"product-total-price-wrapper\">\n              <div className=\"product-price-and-shipment\">\n                  <p className=\"price\">{(selectedCount && piecePrice) ? (selectedCount*piecePrice).toFixed(2) : \"0\" },00 TL</p>\n                  <div className=\"shipment\">\n                      <p><span className=\"truck-icon\"><FiTruck/></span> Kargo Ücreti: <span className=\"shipment-type\">Alıcı Öder</span></p>\n                  </div>\n              </div>\n              <div className=\"product-action-buttons-wrapper\">\n                  <ProductActionButtons/>\n              </div>\n          </div>\n      </div>\n  )\n};\n\nconst mapStateToProps = (state) => {\n  return {\n     productDetailState : state.productDetailReducer\n  }\n};\n\nexport default connect(mapStateToProps)(ProductPriceAndShipmentInfo);","import React from \"react\";\nimport ProductContentHeader from \"./ProductContentHeader\";\nimport ProductMinMaxInformations from \"./ProductMinMaxInformations\";\nimport ProductSelectableAttributes from \"./ProductSelectableAttributes\";\nimport ProductBaremsAndQuantities from \"./ProductBaremsAndQuantities\";\nimport ProductPriceAndShipmentInfo from \"./ProductPriceAndShipmentInfo\";\n\nconst ProductContent = () => {\n    return (\n        <div className=\"product-content-wrapper\">\n            <ProductContentHeader/>\n            <ProductMinMaxInformations/>\n            <ProductSelectableAttributes/>\n            <ProductBaremsAndQuantities/>\n            <ProductPriceAndShipmentInfo/>\n        </div>\n    )\n};\n\nexport default ProductContent;","export default  {\n    \"productTitle\" : \"İş Tulumu Bahçıvan Tip Askılı\",\n    \"selectableAttributes\" : [\n        {\n            \"name\": \"Renk\",\n            \"values\": [\"Siyah\", \"Lacivert\"]\n        },\n        {\n            \"name\": \"Beden\",\n            \"values\": [\"M\", \"L\", \"XL\"]\n        }\n    ],\n    \"productVariants\": [\n        {\n            \"id\": \"432081\",\n            \"attributes\" : [\n                {\n                    \"name\": \"Beden\",\n                    \"selectable\": true,\n                    \"value\": \"L\"\n                },\n                {\n                    \"name\": \"Renk\",\n                    \"selectable\": true,\n                    \"value\":\"Siyah\"\n                }\n            ],\n            \"images\": [ \"https://n11scdn.akamaized.net/a1/500/09/07/31/43/20981291.jpg\", \"https://n11scdn.akamaized.net/a1/500/06/23/25/42/85867976.jpg\", \"https://n11scdn.akamaized.net/a1/500/02/80/22/52/07135903.jpg\", \"https://n11scdn.akamaized.net/a1/500/08/01/96/70/10729119.jpg\"]\n        },\n        {\n            \"id\": \"432110\",\n            \"attributes\" : [\n                {\n                    \"name\": \"Beden\",\n                    \"selectable\": true,\n                    \"value\": \"M\"\n                },\n                {\n                    \"name\": \"Renk\",\n                    \"selectable\": true,\n                    \"value\":\"Lacivert\"\n                }\n            ],\n            \"images\": [ \"https://n11scdn.akamaized.net/a1/500/11/96/04/80/87021819.jpg\", \"https://n11scdn.akamaized.net/a1/500/06/12/21/57/46288336.jpg\", \"https://n11scdn.akamaized.net/a1/500/03/42/24/47/91287006.jpg\", \"https://n11scdn.akamaized.net/a1/500/03/59/50/58/43001440.jpg\"]\n        },\n        {\n            \"id\": \"432089\",\n            \"attributes\" : [\n                {\n                    \"name\": \"Beden\",\n                    \"selectable\": true,\n                    \"value\": \"L\"\n                },\n                {\n                    \"name\": \"Renk\",\n                    \"selectable\": true,\n                    \"value\":\"Lacivert\"\n                }\n            ],\n            \"images\": [ \"https://n11scdn.akamaized.net/a1/500/03/59/50/58/43001440.jpg\", \"https://n11scdn.akamaized.net/a1/500/06/12/21/57/46288336.jpg\", \"https://n11scdn.akamaized.net/a1/500/03/42/24/47/91287006.jpg\", \"https://n11scdn.akamaized.net/a1/500/11/96/04/80/87021819.jpg\"]\n        },\n        {\n            \"id\": \"432111\",\n            \"attributes\" : [\n                {\n                    \"name\": \"Beden\",\n                    \"selectable\": true,\n                    \"value\": \"XL\"\n                },\n                {\n                    \"name\": \"Renk\",\n                    \"selectable\": true,\n                    \"value\":\"Lacivert\"\n                }\n            ],\n            \"images\": [ \"https://n11scdn.akamaized.net/a1/500/06/12/21/57/46288336.jpg\", \"https://n11scdn.akamaized.net/a1/500/11/96/04/80/87021819.jpg\", \"https://n11scdn.akamaized.net/a1/500/03/42/24/47/91287006.jpg\", \"https://n11scdn.akamaized.net/a1/500/03/59/50/58/43001440.jpg\"]\n        }\n    ],\n    \"baremList\":\n        [\n            {\n                \"minimumQuantity\": 120,\n                \"maximumQuantity\": 599,\n                \"price\": 9.5\n            },\n            {\n                \"minimumQuantity\": 600,\n                \"maximumQuantity\": 799,\n                \"price\": 8.46\n            },\n            {\n                \"minimumQuantity\": 800,\n                \"maximumQuantity\": 2147483647,\n                \"price\": 7.13\n            }\n        ]\n};\n","import React from \"react\";\nimport ProductImages from \"../../components/pdp/ProductImages\";\nimport ProductContent from \"../../components/pdp/ProductContent\";\nimport mockedProductResponse from \"../../statics/mocked-product-response\";\nimport {connect} from 'react-redux';\nimport pdpStaticData from \"../../statics/product-detail-static-data\";\nimport {setAvailableSizesActionCreator,} from \"../../redux/actions/pdp/productActions\";\n\nclass ProductDetails extends React.Component{\n\n    getMockedResponseAndInitializeState = () => {\n        let {productVariants} = mockedProductResponse;\n\n        let selectedColorsVariants = [];\n        for (let variant of productVariants){\n            for (let attribute of variant.attributes){\n                if (attribute.name === pdpStaticData.attributes.COLOR && attribute.value === productVariants[0].attributes[1].value){\n                    selectedColorsVariants.push(variant);\n                }\n            }\n        }\n\n        let availableSizes = [];\n        for (let element of selectedColorsVariants){\n            for (let attr of  element.attributes){\n                if(attr.name === pdpStaticData.attributes.SIZE){\n                    availableSizes.push(attr.value);\n                }\n            }\n        }\n\n        this.props.setAvailableSizes(availableSizes);\n    };\n\n    render() {\n        return (\n            <div className=\"product-details-wrapper container\">\n                <ProductImages/>\n                <ProductContent/>\n            </div>\n        );\n    }\n\n    componentWillMount() {\n        this.getMockedResponseAndInitializeState();\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        productDetailState: state.productDetailReducer,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setAvailableSizes: (sizes) => {\n            dispatch(setAvailableSizesActionCreator(sizes))\n        },\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetails);","import React from 'react';\nimport './App.sass';\nimport ProductDetails from \"./pages/pdp/ProductDetails\";\n\nfunction App() {\n    return (\n        <div className=\"app-wrapper\">\n          <ProductDetails/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import productDetailsStaticData from \"../../../statics/product-detail-static-data\"\nimport mockedData from \"../../../statics/mocked-product-response\"\n\nconst initialState = {\n    productTitle : mockedData.productTitle,\n    selectableAttributes : mockedData.selectableAttributes,\n    productVariants : mockedData.productVariants,\n    baremList: mockedData.baremList,\n    initialVariant: mockedData.productVariants[0],\n    activeImage: mockedData.productVariants[0].images[0],\n    activeVariant: mockedData.productVariants[0],\n    selectedCount: null,\n    piecePrice: null,\n    quantityBaremMin: mockedData.baremList[0].minimumQuantity,\n    quantityBaremMax: mockedData.baremList[2].maximumQuantity,\n    priceBaremMin: mockedData.baremList[0].price,\n    priceBaremMax: mockedData.baremList[2].price,\n    selectedColor: null,\n    selectedSize: null,\n    availableSizes: [],\n    activeColorIndex: null,\n    activeSizeIndex: null,\n\n};\n\nconst productDetailReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case productDetailsStaticData.reduxActions.SET_PRODUCT_TITLE:\n            state = {\n                ...state,\n                productTitle: action.payload\n            };\n            break;\n        case productDetailsStaticData.reduxActions.SET_SELECTABLE_ATTRIBUTES:\n            state = {\n                ...state,\n                selectableAttributes: action.payload\n            };\n            break;\n        case productDetailsStaticData.reduxActions.SET_PRODUCT_VARIANTS:\n            state = {\n                ...state,\n                productVariants: action.payload\n            };\n            break;\n        case productDetailsStaticData.reduxActions.SET_BAREM_LIST:\n            state = {\n                ...state,\n                baremList: action.payload\n            };\n            break;\n        case productDetailsStaticData.reduxActions.SET_INITIAL_VARIANT:\n            state = {\n                ...state,\n                initialVariant: action.payload\n            };\n            break;\n        case productDetailsStaticData.reduxActions.SET_ACTIVE_VARIANT:\n            state = {\n                ...state,\n                activeVariant: action.payload\n            };\n            break;\n        case productDetailsStaticData.reduxActions.SET_ACTIVE_IMAGE:\n            state = {\n                ...state,\n                activeImage: action.payload\n            };\n            break;\n        case productDetailsStaticData.reduxActions.SET_SELECTED_COUNT:\n            state = {\n                ...state,\n                selectedCount: action.payload\n            };\n            break;\n        case productDetailsStaticData.reduxActions.SET_PIECE_PRICE:\n            state = {\n                ...state,\n                piecePrice: action.payload\n            };\n            break;\n        case productDetailsStaticData.reduxActions.SET_QUANTITY_BAREM_MIN:\n            state = {\n                ...state,\n                quantityBaremMin: action.payload\n            };\n            break;\n        case productDetailsStaticData.reduxActions.SET_QUANTITY_BAREM_MAX:\n            state = {\n                ...state,\n                quantityBaremMax: action.payload\n            };\n            break;\n        case productDetailsStaticData.reduxActions.SET_SELECTED_COLOR:\n            state = {\n                ...state,\n                selectedColor: action.payload\n            };\n            break;\n        case productDetailsStaticData.reduxActions.SET_SELECTED_SIZE:\n            state = {\n                ...state,\n                selectedSize: action.payload\n            };\n            break;\n        case productDetailsStaticData.reduxActions.SET_AVAILABLE_SIZES:\n            state = {\n                ...state,\n                availableSizes: action.payload\n            };\n            break;\n        case productDetailsStaticData.reduxActions.SET_ACTIVE_COLOR_INDEX:\n            state = {\n                ...state,\n                activeColorIndex: action.payload\n            };\n            break;\n        case productDetailsStaticData.reduxActions.SET_ACTIVE_SIZE_INDEX:\n            state = {\n                ...state,\n                activeSizeIndex: action.payload\n            };\n            break;\n        case productDetailsStaticData.reduxActions.SET_PRICE_BAREM_MIN:\n            state = {\n                ...state,\n                priceBaremMin: action.payload\n            };\n            break;\n        case productDetailsStaticData.reduxActions.SET_PRICE_BAREM_MAX:\n            state = {\n                ...state,\n                priceBaremMax: action.payload\n            };\n            break;\n        default:\n            break;\n    }\n    return state;\n};\n\nexport default productDetailReducer;","import {combineReducers} from \"redux\";\nimport productDetailReducer from \"./pdp/productReducer\";\n\nexport default combineReducers({productDetailReducer});","import {applyMiddleware, createStore} from \"redux\";\nimport logger from \"redux-logger\";\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport reducerCombining from \"./reducers/reducerCombining\";\n\nconst store = createStore(\n    reducerCombining,\n    {},\n    composeWithDevTools(\n        applyMiddleware(logger)\n    )\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}